<?xml version="1.0" standalone="no"?>

<kickstart interface="public">

	<description>
	The 'server node' in the graph.

	This file is used as a connection point for other XML
	configuration nodes.
	</description>

	<si_copyright>
	Copyright (c) 2006 - 2017 StackIQ Inc.
	All rights reserved. stacki(r) v4.0 stacki.com
	https://github.com/Teradata/stacki/blob/master/LICENSE.txt
	</si_copyright>


        <copyright>
        Copyright (c) 2000 - 2010 The Regents of the University of California
        All rights reserved. Rocks(r) v5.4 www.rocksclusters.org
        https://github.com/Teradata/stacki/blob/master/LICENSE-ROCKS.txt
        </copyright>

<native lang="kickstart">
reboot --eject

<eval shell="python" mode="xml">
import os
import urlparse
import stack.roll

g = stack.roll.Generator()

if os.path.exists('/tmp/rolls.xml'):
	g.parse('/tmp/rolls.xml')
elif os.path.exists('/tmp/pallets.xml'):
	g.parse('/tmp/pallets.xml')

for pallet in g.rolls:
	(pname, pver, prel, parch, purl, pdiskid) = pallet
	print('repo --name="%s" --baseurl=%s/%s/%s/%s/redhat/%s' % (pname, purl, pname, pver, prel, parch))
</eval>

</native>


<package>stack-admin</package>
<package>foundation-gd</package>

<!-- to build anaconda -->
<package>device-mapper-devel</package>
<package>isomd5sum-devel</package>
<package>libarchive-devel</package>
<package>libblkid-devel</package>
<package>newt-devel</package>
<package>slang-devel</package>
<package>xmlto</package>
<package>NetworkManager-devel</package>
<package>NetworkManager-glib-devel</package>
<package>dbus-devel</package>
<package>iscsi-initiator-utils-devel</package>
<package>libcurl-devel</package>
<package>stack-config-server</package>
<package>git</package>
<package>git-lfs</package>

<!-- rpms to create pallets -->
<package>genisoimage</package>
<package>createrepo</package>

<!-- packages required for stack create package -->
<package>rpm-build</package>
<package>stack-build</package>
<package>redhat-rpm-config</package>

<!-- text-based spreadsheet editor -->
<package>sc-im</package>

<!-- example spreadsheets -->
<package>stack-examples</package>


<!-- /mnt/cdrom needed to create pallets -->
<post>
    if [ ! -d /mnt/cdrom ]; then
        mkdir -p /mnt/cdrom
    fi
</post>

<post>
<!--
        all rolls added to a running frontend will be added 'on the fly', so
        set the roll_install_on_the_fly ottribute to true.

        'shadow=yes' means that root and apache can access this attribute,
        but it will not show up in 'rocks dump' so it won't pollute the
        restore roll.
-->

/opt/stack/bin/stack set host attr &Kickstart_PrivateHostname; \
	attr=roll_install_on_the_fly value=true shadow=yes

<!--
	 Default to system (passwd/shadow) authentication.
-->
/opt/stack/bin/stack set attr attr=user.auth value=unix

</post>

<post>
mkdir -p /export/stack/carts
chown root:apache /export/stack/carts
chmod 775 /export/stack/carts
</post>

<post>
<file name="/etc/hostname">
&Info_FQDN;
</file>
</post>

<!-- Set Number of CPUs in the database -->
<post>
/sbin/chkconfig stack-num-cpus on
</post>

<!--
	The restore roll needs a default (empty) git repository in order to
	build
-->

<boot order="post">
git init /export/site-pallet/restore
touch /root/.gitconfig
HOME=/root git lfs install --force
</boot>

</kickstart> 

