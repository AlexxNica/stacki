<?xml version="1.0" standalone="no"?>

<kickstart>

	<description>

	  Populates the frontend database with initially selected rolls.

	</description>

        <si_copyright>
        (c) 2006 - 2015 StackIQ Inc.
        All rights reserved. stacki(r) v2.0 www.stacki.com
        </si_copyright>

        <copyright>
        Copyright (c) 2000 - 2010 The Regents of the University of California.
        All rights reserved. Rocks(r) v5.4 www.rocksclusters.org	
        </copyright>

<post interpreter='/opt/stack/bin/python'>
import os
import os.path
import sys
import subprocess
import stack
import stack.roll

if '&hostname;' == 'None':
	#
	# this case can happen when building a cdrom that builds a
	# kickstart file for 'Server' and 'Client'
	#
	sys.exit()

if not os.path.exists('/tmp/rolls.xml'):
	sys.exit()

generator = stack.roll.Generator()
generator.parse('/tmp/rolls.xml')

found = []
for name, version, release, arch, url, diskid in generator.rolls:
	key = '%s-%s-%s-%s' % (name, version, release, arch)

	if key not in found:
		if not release:
			release = stack.release

		mysqlcmd = 'insert into rolls (name, version, rel, arch, os) '
		mysqlcmd += 'values ("%s","%s","%s","%s","redhat" );' \
			% (name, version, release, arch)

		cmd = "/opt/stack/bin/mysql -u apache --execute '%s' cluster" \
			% mysqlcmd
		subprocess.call(cmd, shell = True)

		cmd = '/opt/stack/bin/stack enable pallet %s' % name
		subprocess.call(cmd, shell = True)

		found.append(key)

</post>

</kickstart> 
