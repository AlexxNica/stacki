<stack:stack>


<stack:description>
Apache HTTP Server
</stack:description>


<stack:copyright>
Copyright (c) 2006 - 2017 StackIQ Inc.
All rights reserved. stacki(r) v5.0 stacki.com
https://github.com/Teradata/stacki/blob/master/LICENSE.txt
</stack:copyright>


<stack:package>apache2</stack:package>
<stack:package>curl</stack:package>


<stack:script stack:stage="install-post">

/usr/bin/systemctl enable apache2

mkdir -p /etc/apache2/stacki-conf.d
chmod 755 /etc/apache2/stacki-conf.d

usermod --login apache wwwrun
groupmod --new-name apache www

mkdir -p /var/www
chmod 755 /var/www
(cd /var/www ; ln -s /srv/www/htdocs html)

<stack:file stack:name="/etc/apache2/uid.conf">
User apache
Group apache
</stack:file>

<stack:file stack:name="/etc/apache2/stacki-conf.d/stack.conf"><![CDATA[
#
# Stacki Specific Apache configuration. 
# Generated automatically by the apache.xml node.
#
<IfModule mod_mime.c>
	AddHandler cgi-script .cgi
</IfModule>

<IfModule mod_deflate.c>
AddOutputFilterByType DEFLATE text/html
AddOutputFilterByType DEFLATE text/plain
AddOutputFilterByType DEFLATE text/css
AddOutputFilterByType DEFLATE text/xml
AddOutputFilterByType DEFLATE text/javascript
</IfModule>

# KeepAlive will use the same http session between the
# client/server. This can use more memory/cpu than when
# it is off. If you are memory and cpu starved, comment
# out the following lines and restart the webserver.
KeepAlive On
KeepAliveTimeout 5

UseCanonicalName Off
ServerName ]]>&Info_FQDN;<![CDATA[

DirectoryIndex index.cgi

DocumentRoot	"/var/www/html"

<Directory "/var/www">
	Options FollowSymLinks Indexes ExecCGI
	AllowOverride None
	Require all granted
</Directory>

<Directory "/var/www/html">
	Options FollowSymLinks Indexes ExecCGI
	AllowOverride None
	Require all granted
</Directory>

]]>
</stack:file>

<!-- This should be done automatically by httpd.conf, but isn't for 
	some reason. -->
<stack:file name="/etc/apache2/httpd.conf" mode="append">
Include /etc/apache2/stacki-conf.d/stack.conf
Include /etc/apache2/stacki-conf.d/ssl.conf
Include /etc/apache2/stacki-conf.d/https.conf
</stack:file>

<stack:file stack:name="/etc/apache2/stacki-conf.d/ssl.conf"><![CDATA[
Listen 443 https

SSLPassPhraseDialog exec:/usr/sbin/apache2-systemd-ask-pass

SSLSessionCache         shmcb:/var/lib/apache2/ssl_scache(512000)
SSLSessionCacheTimeout  300

SSLRandomSeed startup file:/dev/urandom  256
SSLRandomSeed connect builtin

SSLCryptoDevice builtin

<VirtualHost _default_:443>

ErrorLog /var/log/apache2/ssl_error_log
TransferLog /var/log/apache2/ssl_access_log
LogLevel warn

SSLEngine on

SSLProtocol all -SSLv2

SSLCipherSuite HIGH:MEDIUM:!aNULL:!MD5:!SEED:!IDEA

SSLCertificateFile /etc/pki/tls/certs/localhost.crt
SSLCertificateKeyFile /etc/pki/tls/private/localhost.key

<Files ~ "\.(cgi|shtml|phtml|php3?)$">
    SSLOptions +StdEnvVars
</Files>
<Directory "/srv/www/cgi-bin">
    SSLOptions +StdEnvVars
</Directory>

BrowserMatch "MSIE [2-5]" \
         nokeepalive ssl-unclean-shutdown \
         downgrade-1.0 force-response-1.0

CustomLog ssl_request_log \
          "%t %h %{SSL_PROTOCOL}x %{SSL_CIPHER}x \"%r\" %b"

</VirtualHost>                                  
]]>
</stack:file>

</stack:script>

<stack:script stack:stage="install-post">
<!-- Create Apache Profile.cgi mutex and semaphore -->
mkdir -p /var/tmp
touch /var/tmp/profile.mutex
chown apache:root /var/tmp/profile.mutex
cat /proc/cpuinfo  | awk -F: '/^processor/{print $2;}' | wc -l > /var/tmp/profile.semaphore
chown apache:root /var/tmp/profile.semaphore
</stack:script>

</stack:stack> 

