#! /usr/bin/python
#
# @SI_Copyright@
#                               stacki.com
#                                  v3.3
# 
#      Copyright (c) 2006 - 2016 StackIQ Inc. All rights reserved.
# 
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are
# met:
#  
# 1. Redistributions of source code must retain the above copyright
# notice, this list of conditions and the following disclaimer.
#  
# 2. Redistributions in binary form must reproduce the above copyright
# notice unmodified and in its entirety, this list of conditions and the
# following disclaimer in the documentation and/or other materials provided 
# with the distribution.
#  
# 3. All advertising and press materials, printed or electronic, mentioning
# features or use of this software must display the following acknowledgement: 
# 
# 	 "This product includes software developed by StackIQ" 
#  
# 4. Except as permitted for the purposes of acknowledgment in paragraph 3,
# neither the name or logo of this software nor the names of its
# authors may be used to endorse or promote products derived from this
# software without specific prior written permission.
# 
# THIS SOFTWARE IS PROVIDED BY STACKIQ AND CONTRIBUTORS ``AS IS''
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
# THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
# PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL STACKIQ OR CONTRIBUTORS
# BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR
# BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE
# OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN
# IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
# @SI_Copyright@

import os
import string
from subprocess import *

dirs = {}
curr = {}

cwd = os.getcwd()
for entry in os.listdir('.'):
	if os.path.isdir(entry):
		os.chdir(entry)
		stdout, stderr = Popen(['make', 'dump-info'], 
				       stderr=PIPE, stdout=PIPE).communicate()

		for line in stdout.split('\n'):
			if not line:
				continue
			try:
				key, value = line.split('=', 1)
			except ValueError:
				continue
			key   = key.strip()
			value = value.strip()

			try:
				if key.lower() in curr.keys():
					dirs[curr['name']] = curr
					curr = {}
			except:
				continue
        
			curr[key.lower()] = value

		try:
			dirs[curr['name']] = curr
		except:
			pass

		os.chdir(cwd)


list = []
for src in dirs.keys():
        order = dirs[src]['order']
        if order:
                order = int(order)
        else:
                order = 50
        list.append((order, dirs[src]['dir']))

list.sort()

print 'SRCDIRS = ',
for order, src in list:
        print '\\\n\t%s ' % src,
